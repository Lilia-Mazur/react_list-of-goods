{"version":3,"sources":["components/GoodList.tsx","App.tsx","index.tsx"],"names":["GoodList","state","sortBy","isReversed","reverse","setState","sort","value","reset","getGoodList","visibleList","props","goodsList","a","b","localeCompare","length","goodList","this","className","map","good","type","onClick","React","Component","goodsFromServer","App","isVisible","ReactDOM","render","document","getElementById"],"mappings":"mPAWaA,EAAb,4MACEC,MAAQ,CACNC,OAAQ,GACRC,YAAY,GAHhB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBARzB,EAYEG,KAAO,SAACC,GACN,EAAKF,SAAS,CAAEH,OAAQK,KAb5B,EAgBEC,MAAQ,WACN,EAAKH,SAAS,CACZH,OAAQ,GACRC,YAAY,KAnBlB,EAuBEM,YAAc,WACZ,MAA+B,EAAKR,MAA5BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,WACVO,EAAW,YAAO,EAAKC,MAAMC,WAmBnC,OAjBIV,GACFQ,EAAYJ,MAAK,SAACO,EAAGC,GACnB,OAAQZ,GACN,IAAK,WACH,OAAOW,EAAEE,cAAcD,GACzB,IAAK,SACH,OAAQD,EAAEG,OAASF,EAAEE,OACvB,QACE,OAAO,MAKXb,GACFO,EAAYN,UAGPM,GA5CX,4CA+CE,WAAU,IAAD,OACDO,EAAWC,KAAKT,cAEtB,OACE,qCACE,oBAAIU,UAAU,oBAAd,SACGF,EAASG,KAAI,SAAAC,GAAI,OAChB,6BACGA,GADMA,QAKb,sBAAKF,UAAU,UAAf,UACE,wBACEG,KAAK,SACLC,QAASL,KAAKd,QACde,UAAU,uCAHZ,qBAOA,wBACEG,KAAK,SACLC,QAAS,kBAAM,EAAKjB,KAAK,aACzBa,UAAU,qCAHZ,iCAOA,wBACEG,KAAK,SACLC,QAAS,kBAAM,EAAKjB,KAAK,WACzBa,UAAU,qCAHZ,4BAOA,wBACEG,KAAK,SACLC,QAASL,KAAKV,MACdW,UAAU,wCAHZ,6BAjFV,GAA8BK,IAAMC,WCP9BC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,E,4MACJ1B,MAAQ,CACN2B,WAAW,G,4CAGb,WAAU,IAAD,OACCA,EAAcV,KAAKjB,MAAnB2B,UAER,OACE,sBAAKT,UAAU,gBAAf,UACE,oBAAIA,UAAU,QAAd,mBACCS,EACG,cAAC,EAAD,CAAUhB,UAAWc,IAErB,wBACEJ,KAAK,SACLC,QAAS,kBAAM,EAAKlB,SAAS,CAAEuB,WAAW,KAC1CT,UAAU,oBAHZ,0B,GAdMK,IAAMC,WA2BTE,ICzCfE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7d4d27b8.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goodsList: string[],\n};\n\ntype State = {\n  sortBy: string,\n  isReversed: boolean,\n};\n\nexport class GoodList extends React.Component<Props, State> {\n  state = {\n    sortBy: '',\n    isReversed: false,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sort = (value: string) => {\n    this.setState({ sortBy: value });\n  };\n\n  reset = () => {\n    this.setState({\n      sortBy: '',\n      isReversed: false,\n    });\n  };\n\n  getGoodList = () => {\n    const { sortBy, isReversed } = this.state;\n    const visibleList = [...this.props.goodsList];\n\n    if (sortBy) {\n      visibleList.sort((a, b) => {\n        switch (sortBy) {\n          case 'alphabet':\n            return a.localeCompare(b);\n          case 'length':\n            return (a.length - b.length);\n          default:\n            return 0;\n        }\n      });\n    }\n\n    if (isReversed) {\n      visibleList.reverse();\n    }\n\n    return visibleList;\n  };\n\n  render() {\n    const goodList = this.getGoodList();\n\n    return (\n      <>\n        <ul className=\"content is-medium\">\n          {goodList.map(good => (\n            <li key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={this.reverse}\n            className=\"button is-danger is-light is-rounded\"\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => this.sort('alphabet')}\n            className=\"button is-info is-light is-rounded\"\n          >\n            Sort alphabetically\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => this.sort('length')}\n            className=\"button is-link is-light is-rounded\"\n          >\n            Sort by length\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.reset}\n            className=\"button is-primary is-light is-rounded\"\n          >\n            Reset\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { GoodList } from './components/GoodList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isVisible: false,\n  };\n\n  render() {\n    const { isVisible } = this.state;\n\n    return (\n      <div className=\"App container\">\n        <h1 className=\"title\">Goods</h1>\n        {isVisible\n          ? <GoodList goodsList={goodsFromServer} />\n          : (\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ isVisible: true })}\n              className=\"button is-success\"\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}